name: "update-version"
on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
    - name: Install Doppler CLI
      uses: dopplerhq/cli-action@v2

    - name: Pass all secrets to next steps
      run: |
        while read -rd $'' line; do echo "$line" >> $GITHUB_ENV; done < <( doppler secrets download --no-file --format=json | jq "." | grep -v 'DOPPLER_\(CONFIG\|ENVIRONMENT\|PROJECT\)' | jq -r 'to_entries|map("\(.key)<<EOF\n\(.value)\nEOF\u0000")[]' )
        while read -r line; do echo "::add-mask::$line"; done < <( doppler secrets download --no-file --format=json | jq "." | grep -v 'DOPPLER_\(CONFIG\|ENVIRONMENT\|PROJECT\)' | jq -r 'to_entries|map("\(.value)\u0000")[]' )
      env:
        DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}

    - name: Install Nix
      uses: cachix/install-nix-action@v18
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Get current version
      run: |
        set -x
        currentVersion="$(nix-instantiate --eval -E '
          let
            aagl = import ./default.nix { };
            version = aagl.an-anime-game-launcher-gtk-unwrapped.version;
          in
          version
        ' | tr -d \")"
        echo "current-version=$currentVersion" >> $GITHUB_ENV

    - name: Check for new release
      run: |
        set -x
        latestVersion="$(git -c 'versionsort.suffix=-' ls-remote --exit-code --refs --tags --sort='v:refname' \
          https://github.com/an-anime-team/an-anime-game-launcher-gtk | \
          awk 'END {match($2, /([^/]+)$/, m); print m[0]}')"
        echo "latest-version=$latestVersion" >> $GITHUB_ENV

    - name: Update package
      if: ${{ env.current-version != env.latest-version }}
      run: |
        nix shell nixpkgs#nix-update -c nix-update an-anime-game-launcher-gtk-unwrapped --version=${{ env.latest-version }} --build
        echo "commit-message<<EOF" >> $GITHUB_ENV
        echo "an-anime-game-launcher-gtk: ${{ env.current-version }} -> ${{ env.latest-version }}" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Create pull request
      uses: peter-evans/create-pull-request@v4
      with:
        author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
        commit-message: ${{ env.commit-message }}
        title: ${{ env.commit-message }}
        body: |
          - Nix dependency updates

          Auto-generated by [create-pull-request][1]

          [1]: https://github.com/peter-evans/create-pull-request
        branch: update-version
